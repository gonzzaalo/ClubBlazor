@page "/nuevosocio"
@using ClubBlazor.Interfaces
@using ClubBlazor.Models
@inject GenericService<Socio> SocioService
@inject GenericService<Cuota> CuotaService
@inject NavigationManager NavigationManager

<div class="background-container">
    <img src="/Imagenes/socios.jpg" alt="Background" class="background-img">
</div>

<h3>Nuevo Socio</h3>

<div class="form-container">
<EditForm Model="nuevoSocio" OnValidSubmit="CrearSocio">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nombre</label>
        <InputText class="form-control" @bind-Value="nuevoSocio.Nombre" />
    </div>

    <div class="mb-3">
        <label class="form-label">Apellido</label>
        <InputText class="form-control" @bind-Value="nuevoSocio.Apellido" />
    </div>

    <div class="mb-3">
        <label class="form-label">Teléfono</label>
        <InputText class="form-control" @bind-Value="nuevoSocio.Telefono" />
    </div>

    <div class="mb-3">
        <label class="form-label">Dirección</label>
        <InputText class="form-control" @bind-Value="nuevoSocio.Direccion" />
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="nuevoSocio.Email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Cuota</label>
        <InputSelect class="form-control" @bind-Value="nuevoSocio.CuotaId">
            <option value="">Selecciona una cuota</option>
            @foreach (var cuota in cuotas)
            {
                <option value="@cuota.Id">@cuota.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-success">Crear Socio</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>
</div>

@code {
    private Socio nuevoSocio = new Socio();
    private List<Cuota> cuotas = new List<Cuota>();

    protected override async Task OnInitializedAsync()
    {
        // Cargar las cuotas desde el servicio, si es necesario
        cuotas = await CuotaService.GetAllAsync();
    }

    private async Task CrearSocio()
    {
        if (nuevoSocio != null)
        {
            await SocioService.AddAsync(nuevoSocio); // Crear el nuevo socio en el backend
            NavigationManager.NavigateTo("/socios"); // Redirigir a la lista de socios
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/socios"); // Redirigir a la lista de socios si se cancela
    }
}
